#!/usr/bin/env bash
# Purpose: Ensure LUW_HOME is set and $LUW_HOME/bin is appended to PATH in ~/.bashrc, ~/.zshrc, and ~/.profile.
# Behavior: Update existing LUW_HOME definition if present, otherwise append it. Append PATH only if $LUW_HOME/bin is missing.
# Notes: Run with administrative privileges. When invoked via sudo, this modifies the invoking user's shell init files.

set -euo pipefail

# Resolve the script's own directory, following symlinks
SCRIPT_SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SCRIPT_SOURCE" ]; do
  DIR="$(cd -P "$(dirname "$SCRIPT_SOURCE")" && pwd)"
  SCRIPT_SOURCE="$(readlink "$SCRIPT_SOURCE")"
  [[ "$SCRIPT_SOURCE" != /* ]] && SCRIPT_SOURCE="$DIR/$SCRIPT_SOURCE"
done
SCRIPT_DIR="$(cd -P "$(dirname "$SCRIPT_SOURCE")" && pwd)"

# Parent directory of the script
LUW_HOME_RESOLVED="$(cd "$SCRIPT_DIR/.." && pwd)"

echo "Detected parent directory:"
echo "  $LUW_HOME_RESOLVED"
read -r -p "Set this as LUW_HOME and ensure \$LUW_HOME/bin is appended to PATH in ~/.bashrc, ~/.zshrc, and ~/.profile. Proceed? [y/N]: " reply
case "$reply" in
  [yY]|[yY][eE][sS]) ;;
  *) echo "Cancelled"; read -n1 -s -r -p "Press any key to exit"; echo; exit 1 ;;
esac

# Determine current user and home (no sudo awareness)
TARGET_USER="$(id -un)"
TARGET_HOME="$HOME"

if [ -z "${TARGET_HOME:-}" ] || [ ! -d "$TARGET_HOME" ]; then
  echo "ERROR: Could not resolve home directory for user: $TARGET_USER" >&2
  exit 1
fi

TARGET_BASHRC="$TARGET_HOME/.bashrc"
TARGET_ZSHRC="$TARGET_HOME/.zshrc"
TARGET_PROFILE="$TARGET_HOME/.profile"

echo "Target bashrc:"
echo "  $TARGET_BASHRC"

# Ensure target init files exist with correct ownership
for f in "$TARGET_BASHRC" "$TARGET_ZSHRC" "$TARGET_PROFILE"; do
  if [ ! -f "$f" ]; then
    touch "$f"
  fi
done

# Function to ensure LUW_HOME export in a file
ensure_luw_home_export() {
  local file="$1"
  if grep -Eq '^[[:space:]]*export[[:space:]]+LUW_HOME=' "$file"; then
    sed -i -E "s|^[[:space:]]*export[[:space:]]+LUW_HOME=.*$|export LUW_HOME=\"$LUW_HOME_RESOLVED\"|g" "$file"
  else
    {
      echo ""
      echo "# Generated by setup_LUW_home.sh on $(date -u +"%Y-%m-%dT%H:%M:%SZ")"
      echo "export LUW_HOME=\"$LUW_HOME_RESOLVED\""
    } >> "$file"
  fi
}

# Function to ensure PATH guard block in a file
ensure_path_guard() {
  local file="$1"
  if grep -q 'LUW_HOME/bin' "$file"; then
    :
  else
    cat >> "$file" <<'EOS'

# Ensure $LUW_HOME/bin is appended to PATH once per shell
case ":$PATH:" in
  *":$LUW_HOME/bin:"*) ;;
  *) export PATH="$PATH:$LUW_HOME/bin" ;;
esac
EOS
  fi
}

# 1) Ensure LUW_HOME definition exists and points to the resolved path in bashrc, zshrc, and profile
ensure_luw_home_export "$TARGET_BASHRC"
ensure_luw_home_export "$TARGET_ZSHRC"
ensure_luw_home_export "$TARGET_PROFILE"

# 2) Ensure PATH appends $LUW_HOME/bin exactly once in bashrc, zshrc, and profile
ensure_path_guard "$TARGET_BASHRC"
ensure_path_guard "$TARGET_ZSHRC"
ensure_path_guard "$TARGET_PROFILE"

# Apply to current shell of the running process
export LUW_HOME="$LUW_HOME_RESOLVED"
case ":$PATH:" in
  *":$LUW_HOME/bin:"*) ;;
  *) export PATH="$PATH:$LUW_HOME/bin" ;;
esac

echo "LUW_HOME set to: $LUW_HOME"
echo "PATH updated for the current shell if needed."
echo "Changes written to:"
echo "  $TARGET_BASHRC"
echo "  $TARGET_ZSHRC"
echo "  $TARGET_PROFILE"
read -n1 -s -r -p "Press any key to exit"; echo
