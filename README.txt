Installation:

1. Export environmental variable LUW_HOME to the main folder of LatticeUrbanWind package.
2. Add $LUW_HOME/bin to system path.

Usage:

The $project_path$ mentioned below is the parent folder of deck file (*.luw, the configuration file). You can actually place it anywhere you would like, and name the folder as you like (casename is suggested).

Project folder $project_path$ includes: xxx.luw (configuration deck), building_db (folder for building database), terrain_db (folder for terrain database, under development), wind_bc (netcdf boundary data), proj_temp (intermedia files), and RESULTS folder for output.

Commands:

The following commands are provided by this package. The deck file could be automatically detected, if "conf.luw" exists in current folder of console.

"luwbc <path-to-deck>" to build the boundary condition. The netcdf file (.nc) should be placed in $project_path$/wind_bc, with the name of "casename_datetime.nc". If the netcdf file name is incorrect, the only .nc file in the wind_bc folder will be treated as input, which is not recommended. It is supposed to be called for each datetime code under batch mode.

"luwcut <path-to-deck>" to cut out the building data within the given lat-lon range, indicated in the deck. The input is $project_path$/building_db. Only one *.shp file is allowed to be in this folder, and it is insensitive to the *.shp file name.

"luwvox <path-to-deck>" to voxelize the buildings (build the *.stl 3D file), preparing for CFD, based on the cutted *.shp file by a previous run of luwcut.

"shpinspect <path-to-deck or path-to-shp>" inspect the metadata of input *.shp file (buildings database), or the *.shp file pointed by the deck.

"cdfinspect <path-to-deck or path-to-nc>" inspect the metadata of input *.nc netcdf file, or the *.nc file pointed by the deck.

"luwval <path-to-deck>" run post alignment degree check and fulfill mandatory fields to deck, ensure it is suitable for cfd run.

"makeluw <path-to-deck>" globally run inspects, build the bc, voxelize the buildings, in one-click, and dump the logfile at the same time.

"cleanluw <path-to-deck>" will clean the autogenerated deck parameters and deleted the temp files, preparing for the next run of makeluw.

"transluw <path-to-deck> <(optional tailname)>" will perform post-computation transformation on the raw cfd results, recover the coordinates to orginal.

"visluw" translate vtk file from utm to lat/lon, save to *.npz and *.nc, and generate sectional views of velocity.

(Under development) "visluw <path-to-vtk>" will compute vorticity and, if possible, pressure, from a vtk result file.  